{"version":3,"sources":["assets/images/burger.svg","container/Burger/component/BurgerIngredients.js","container/Burger/Burger.js","container/BuildControls/index.js","container/BuildControls/component/index.jsx","container/BurgerBuilder/component/OrderSummary.jsx","container/BurgerBuilder/store/constants.js","container/Checkout/store/constants.js","container/BurgerBuilder/component/index.jsx","container/BurgerBuilder/store/actions.js","container/Checkout/store/action.js","container/BurgerBuilder/index.js","container/CheckoutSummary/component/CheckoutSummary.js","container/Checkout/component/ContactData.js","container/Checkout/component/Checkout.js","container/OrderDetails/store/constants.js","container/OrderDetails/component/OrderDetails.js","container/OrderDetails/store/action.js","container/Aunthentication/components/index.jsx","container/Aunthentication/store/constants.js","container/Aunthentication/store/actions.js","container/Aunthentication/index.js","container/Aunthentication/components/LogOut.js","App.js","serviceWorker.js","container/Checkout/store/reducer.js","container/BurgerBuilder/store/reducer.js","container/OrderDetails/store/reducer.js","container/Aunthentication/store/reducer.js","container/BurgerBuilder/apis.js","container/BurgerBuilder/saga.js","container/Checkout/apis.js","container/Checkout/saga.js","container/OrderDetails/apis.js","container/OrderDetails/saga.js","container/Aunthentication/apis.js","container/Aunthentication/saga.js","saga/index.js","index.js"],"names":["module","exports","BurgerIngedients","ingredient","this","props","type","className","React","Component","Burger","ingredients","trasformIngredients","Object","keys","map","igKeys","Array","_","index","BurgerIngredients","key","reduce","arr","el","concat","length","BuildControls","label","onClick","add","delete","disabled","OrderSummary","price","close","clickOrder","title","visible","onCancel","footer","toFixed","controls","labels","BurgerBuilderComponent","state","purchaseable","summaryModal","isLoading","updatePurchase","updatedIngredients","newIngredients","toggleModal","setState","openOrderSummary","tokenId","history","push","continueWithOrder","OrderConfirm","initIngredients","disableBtn","prop","antIcon","LoadingOutlined","style","fontSize","spin","indicator","spinning","ctrl","addIngredients","deleteIngredients","spinner","top","mapDispatchToProps","ingrName","ActionTypes","ingredientName","BurgerBuilder","connect","authenticationReducer","initIngredientsReducer","totalPrice","CheckoutSummary","danger","onCheckoutCancel","onCheckoutContinue","Option","Select","ContactForm","name","email","street","postalCode","deliveryMethod","onChangeHandle","event","preventDefault","target","value","onOrderSubmit","payload","ingrnt","orderIngredients","Item","onChange","float","Checkout","goBack","replace","checkOutRender","orderConfirm","to","textAlign","path","match","component","ContactData","orderIngredientsReducer","OrderDetails","fetchOrder","fetchOrders","item","id","width","textTransform","border","padding","margin","fetchOrderReducer","fetchedOrders","AuthenticationComponent","password","isSignUp","onUserChangeHandle","authenticateSubmitHandle","returnSecureToken","authenticateUser","switchSignOption","prevState","autoRedirect","buildStatus","maxWidth","Password","marginLeft","builder","authenticateUserSuccess","expiration","Authentication","LogOut","logOut","localStorage","removeItem","App","retainLoginStatus","routes","exact","src","logo","alt","mode","withRouter","Boolean","window","location","hostname","initialState","order","action","newOrder","orderData","priceIncrements","salad","bacon","cheese","meat","initIngredientsApi","fetch","initIngredientsSaga","call","Apis","response","json","data","put","takeEvery","orderIngredientsApi","console","log","method","headers","body","JSON","stringify","orderIngredientsSaga","fetchOrderApi","fetchOrderSaga","refinedOrders","authenticateUserApi","url","authenticateUserSaga","expirationTime","Date","getTime","expiresIn","setItem","idToken","getItem","token","expirationDate","takeLatest","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b394eec9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.fbe040ce.svg\";","import React from \"react\";\nimport \"../BurgerIngredient.less\";\n\nclass BurgerIngedients extends React.Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className=\"BreadBottom\"></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className=\"BreadTop\">\n            <div className=\"Seeds1\"></div>\n            <div className=\"Seeds2\"></div>\n          </div>\n        );\n        break;\n\n      case \"meat\":\n        ingredient = <div className=\"Meat\"></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className=\"Cheese\"></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className=\"Salad\"></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className=\"Bacon\"></div>;\n        break;\n      default:\n        ingredient = null;\n        break;\n    }\n    return ingredient;\n  }\n}\n\nexport default BurgerIngedients;\n","import React from \"react\";\nimport BurgerIngredients from \"./component/BurgerIngredients\";\n\nexport default class Burger extends React.Component {\n  render() {\n    //Object.keys(ingredients): This gives an array [salad,bacon,cheese,meat]\n    //(ingredients[igKeys]) is equal to (ingredients is salad,bacon...and [igKeys] is its value i.e, 1,2)\n    //[...Array(ingredients[igKeys])]: This gives an array like [undefined] since on salad...\n    // we have value \"1\", similarly it maps through each keys like on cheese we will get 2 ...\n    //[undefined][undefined ] array\n    //\n    const { ingredients } = this.props;\n    let trasformIngredients =\n      ingredients &&\n      Object.keys(ingredients)\n        .map((igKeys) => {\n          return [...Array(ingredients[igKeys])].map((_, index) => {\n            // this maps through each new array and...\n            // return burger components lets say if we have value ...\n            //2 on cheese it return 2 cheese burger component...\n            return (\n              <BurgerIngredients key={`${igKeys}_${index}`} type={igKeys} />\n            );\n          });\n        })\n        .reduce((arr, el) => {\n          return arr.concat(el);\n        }, []);\n    if (trasformIngredients && trasformIngredients.length === 0) {\n      trasformIngredients = <p>Please Start Adding Ingredients.</p>;\n    }\n    return (\n      <div className=\"Burger\">\n        <BurgerIngredients type=\"bread-top\" />\n        {trasformIngredients}\n        <BurgerIngredients type=\"bread-bottom\" />\n      </div>\n    );\n  }\n}\n","import BuildControlsComponent from \"../BuildControls/component\";\n\nconst BuildControls = BuildControlsComponent;\nexport default BuildControls;\n","import React from \"react\";\nimport \"../BuildControls.less\";\nimport { Button } from \"antd\";\n\nconst BuildControlsComponent = (props) => {\n  return (\n    <div className=\"BuildControls\">\n      <div className=\"InnerBuildControls\">\n        <div>\n          <label>{props.label}</label>\n        </div>\n        <Button type=\"primary\" onClick={props.add}>\n          More\n        </Button>\n        <Button\n          type=\"secondary\"\n          onClick={props.delete}\n          disabled={props.disabled[props.type]}\n        >\n          Less\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BuildControlsComponent;\n","import React from \"react\";\nimport { Modal, Button } from \"antd\";\n\nconst OrderSummary = (props) => {\n  const { ingredients, price, close, clickOrder } = props;\n\n  return (\n    <Modal\n      title=\"Your Order\"\n      visible\n      onCancel={props.close}\n      footer={[\n        <Button key=\"back\" onClick={close}>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" type=\"primary\" onClick={clickOrder}>\n          Continue\n        </Button>,\n      ]}\n    >\n      <h2>A delicious Burger with the following ingredients</h2>\n      <ul>\n        {Object.keys(ingredients).map((igKeys) => {\n          return (\n            <li key={igKeys}>\n              <strong>{igKeys} : </strong>\n              {ingredients[igKeys]}\n            </li>\n          );\n        })}\n      </ul>\n      <p>\n        <strong>Total Price: $ {price.toFixed(2)}</strong>\n      </p>\n      <span>Continue to checkout?</span>\n    </Modal>\n  );\n};\n\nexport default OrderSummary;\n","export default {\n  INIT_INGRDIENTS: \"INIT_INGRDIENTS\",\n  INIT_INGRDIENTS_SUCCEDED: \"INIT_INGRDIENTS_SUCCEDED\",\n  ADD_INGREDIENT: \"ADD_INGREDIENT\",\n  REMOVE_INGREDIENT: \"REMOVE_INGREDIENT\",\n  UPDATE_PURCHASE: \"UPDATE_PURCHASE\",\n};\n","export default {\n  ORDER_BURGER: \"ORDER_BURGER\",\n  ORDER_BURGER_SUCCESS: \"ORDER_BURGER_SUCCESS\",\n  ORDER_CONFIRM: \"ORDER_CONFIRM\",\n};\n","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport BuildControls from \"../../BuildControls\";\nimport \"../BurgerBuilder.less\";\nimport { Button, Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport OrderSummary from \"./OrderSummary\";\nimport { connect } from \"react-redux\";\nimport {\n  initIngredients,\n  addIngredients,\n  deleteIngredients,\n} from \"../store/actions\";\nimport { OrderConfirm } from \"../../Checkout/store/action\";\nconst controls = [\n  { labels: \"Salad\", type: \"salad\" },\n  { labels: \"Bacon\", type: \"bacon\" },\n  { labels: \"Cheese\", type: \"cheese\" },\n  { labels: \"Meat\", type: \"meat\" },\n];\n\nclass BurgerBuilderComponent extends React.Component {\n  // state = {\n  //   ingredients: null,\n  //   totalPrice: 4,\n  //   purchaseable: false,\n  //   summaryModal: false,\n  //   isLoading: false,\n  // };\n  state = {\n    purchaseable: false,\n    summaryModal: false,\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    // axios\n    //   .get(\"https://react-burgerapp-942a6.firebaseio.com/ingredients.json\")\n    //   .then((response) => {\n    //     this.setState({\n    //       ingredients: response.data,\n    //     });\n    //   })\n    //   .catch((error) => error);\n    this.props.initIngredients();\n  }\n\n  updatePurchase = () => {\n    const updatedIngredients = { ...this.props.newIngredients };\n    const sum = Object.keys(updatedIngredients)\n      .map((igKeys) => {\n        return updatedIngredients[igKeys];\n      })\n      .reduce((arr, el) => {\n        return arr + el;\n      }, 0);\n    return sum > 0;\n  };\n\n  toggleModal = () => {\n    this.setState({\n      summaryModal: !this.state.summaryModal,\n    });\n  };\n  openOrderSummary = () => {\n    if (!this.props.tokenId) {\n      this.props.history.push(\"/authentication\");\n    }\n    this.setState({\n      summaryModal: true,\n    });\n  };\n\n  continueWithOrder = () => {\n    this.props.OrderConfirm();\n    this.props.history.push(\"/checkout-summary\");\n  };\n\n  render() {\n    let disableBtn = { ...this.props.newIngredients };\n    for (let prop in disableBtn) {\n      // returns true/false for each Ingredients\n      disableBtn[prop] = disableBtn[prop] <= 0;\n    }\n    const antIcon = <LoadingOutlined style={{ fontSize: 44 }} spin />;\n\n    return (\n      <Spin indicator={antIcon} spinning={this.state.isLoading}>\n        {this.props.newIngredients ? (\n          <div>\n            <Burger ingredients={this.props.newIngredients} />\n\n            <div className=\"priceOrder\">\n              <p className=\"price\">Price: $ {this.props.price.toFixed(2)}</p>\n              <Button\n                type=\"primary\"\n                onClick={this.openOrderSummary}\n                disabled={this.props.tokenId && !this.updatePurchase()}\n              >\n                {this.props.tokenId ? \"Order\" : \"Sign up to Order\"}\n              </Button>\n            </div>\n            {controls.map((ctrl) => {\n              return (\n                <BuildControls\n                  key={ctrl.labels}\n                  label={ctrl.labels}\n                  type={ctrl.type}\n                  add={() => this.props.addIngredients(ctrl.type)}\n                  delete={() => this.props.deleteIngredients(ctrl.type)}\n                  disabled={disableBtn}\n                />\n              );\n            })}\n            {this.state.summaryModal && (\n              <OrderSummary\n                ingredients={this.props.newIngredients}\n                close={this.toggleModal}\n                price={this.props.price}\n                clickOrder={this.continueWithOrder}\n              />\n            )}\n          </div>\n        ) : (\n          <Spin spinner=\"true\" indicator={antIcon} style={{ top: 95 }} />\n        )}\n      </Spin>\n    );\n  }\n}\nconst mapStateToProps = ({ authenticationReducer, initIngredientsReducer }) => {\n  return {\n    //ingrnt: reducer.ingredients,\n    price: initIngredientsReducer.totalPrice,\n    newIngredients: initIngredientsReducer.ingredients,\n    tokenId: authenticationReducer.tokenId !== null,\n  };\n};\nconst mapDispatchToProps = {\n  addIngredients,\n  deleteIngredients,\n  initIngredients,\n  OrderConfirm,\n};\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     addIngredients: (ingrName) =>\n//       dispatch({ type: ActionTypes.ADD_INGREDIENT, ingredientName: ingrName }),\n//     deleteIngredients: (ingrName) =>\n//       dispatch({\n//         type: ActionTypes.REMOVE_INGREDIENT,\n//         ingredientName: ingrName,\n//       }),\n//     initIngredients: dispatch(initIngredients()),\n//   };\n// };\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BurgerBuilderComponent);\n","import ActionTypes from \"./constants\";\n\nexport const initIngredients = () => {\n  return {\n    type: ActionTypes.INIT_INGRDIENTS,\n  };\n};\nexport const initIngredientsSucceded = (ingr) => {\n  return {\n    type: ActionTypes.INIT_INGRDIENTS_SUCCEDED,\n    ingredients: ingr,\n  };\n};\n\nexport const addIngredients = (ingrName) => {\n  return {\n    type: ActionTypes.ADD_INGREDIENT,\n    ingredientName: ingrName,\n  };\n};\nexport const deleteIngredients = (ingrName) => {\n  return {\n    type: ActionTypes.REMOVE_INGREDIENT,\n    ingredientName: ingrName,\n  };\n};\n","import ActionTypes from \"./constants\";\n\nexport const orderIngredients = (payload, tokenId) => {\n  return {\n    type: ActionTypes.ORDER_BURGER,\n    payload,\n    tokenId,\n  };\n};\nexport const orderIngredientsSuccess = (id, orderData) => {\n  console.log(id, orderData);\n  return {\n    type: ActionTypes.ORDER_BURGER_SUCCESS,\n    id,\n    orderData,\n  };\n};\nexport const OrderConfirm = () => {\n  return {\n    type: ActionTypes.ORDER_CONFIRM,\n  };\n};\n","import BurgerBuilderComponent from \"./component\";\n\nconst BurgerBuilder = BurgerBuilderComponent;\n\nexport default BurgerBuilder;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport Burger from \"../../Burger/Burger\";\n\nconst CheckoutSummary = (props) => {\n  return (\n    <>\n      <h1>We hope the burger tastes good!</h1>\n      <div>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button type=\"dashed\" danger onClick={props.onCheckoutCancel}>\n        Cancel\n      </Button>\n      <Button type=\"primary\" onClick={props.onCheckoutContinue}>\n        Continue\n      </Button>\n    </>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport { Form, Input, Button, Select, Spin } from \"antd\";\nimport \"../../Checkout/Checkout.less\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { orderIngredients } from \"../store/action\";\nconst { Option } = Select;\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    street: \"\",\n    postalCode: \"\",\n    deliveryMethod: \"\",\n    isLoading: false,\n  };\n  onChangeHandle = (event) => {\n    event.preventDefault();\n    //console.log(event);\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  onOrderSubmit = () => {\n    this.setState({\n      isLoading: true,\n    });\n    //e.preventDefault();\n    const payload = {\n      name: this.state.name,\n      email: this.state.email,\n      street: this.state.street,\n      postalCode: this.state.postalCode,\n      deliveryMethod: this.state.deliveryMethod,\n      ingredients: this.props.ingrnt,\n      totalPrice: this.props.price,\n    };\n    // fetch(\"https://react-burgerapp-942a6.firebaseio.com/orders.json\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(payload),\n    // }).then((response) => {\n    //   this.setState({\n    //     isLoading: false,\n    //   });\n    //   this.props.history.push(\"/\");\n    // });\n    this.props.orderIngredients(payload, this.props.tokenId);\n  };\n  render() {\n    const antIcon = <LoadingOutlined style={{ fontSize: 44 }} spin />;\n    return (\n      <div className=\"contact-wrap\">\n        <Form>\n          <Form.Item label=\"Name\">\n            <Input\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.onChangeHandle}\n            />\n          </Form.Item>\n          <Form.Item label=\"Email\">\n            <Input\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.onChangeHandle}\n            />\n          </Form.Item>\n          <Form.Item label=\"Street\">\n            <Input\n              name=\"street\"\n              value={this.state.street}\n              onChange={this.onChangeHandle}\n            />\n          </Form.Item>\n          <Form.Item label=\"Postal Code\">\n            <Input\n              name=\"postalCode\"\n              value={this.state.postalCode}\n              onChange={this.onChangeHandle}\n            />\n          </Form.Item>\n          <Form.Item label=\"Delevery Method\">\n            <Select\n              name=\"deliveryMethod\"\n              onChange={(value) => {\n                this.setState({\n                  deliveryMethod: value,\n                });\n              }}\n              value={this.state.deliveryMethod}\n            >\n              <Option value=\"Fastest\">Fastest</Option>\n              <Option value=\"Moderate\">Moderate</Option>\n            </Select>\n          </Form.Item>\n          <Button\n            onClick={this.onOrderSubmit}\n            type=\"primary\"\n            style={{ float: \"right\" }}\n          >\n            Order Now\n          </Button>\n        </Form>\n        {this.state.isLoading && (\n          <div className=\"spinner-styling\">\n            <Spin spinner=\"true\" indicator={antIcon} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ initIngredientsReducer, authenticationReducer }) => {\n  return {\n    ingrnt: initIngredientsReducer.ingredients,\n    price: initIngredientsReducer.totalPrice,\n    tokenId: authenticationReducer.tokenId,\n  };\n};\nconst mapDispatchToProps = {\n  orderIngredients,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport CheckoutSummary from \"../../CheckoutSummary/component/CheckoutSummary\";\nimport ContactData from \"./ContactData\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nclass Checkout extends React.Component {\n  onCheckoutCancel = () => {\n    this.props.history.goBack();\n  };\n  onCheckoutContinue = () => {\n    this.props.history.replace(\"/checkout-summary/contact-data\");\n  };\n\n  render() {\n    const checkOutRender = this.props.orderConfirm ? <Redirect to=\"/\" /> : null;\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        {checkOutRender}\n\n        <CheckoutSummary\n          ingredients={this.props.ingrnt}\n          onCheckoutCancel={this.onCheckoutCancel}\n          onCheckoutContinue={this.onCheckoutContinue}\n        />\n        <Route\n          path={`${this.props.match.path}/contact-data`}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  initIngredientsReducer,\n  orderIngredientsReducer,\n}) => {\n  return {\n    ingrnt: initIngredientsReducer.ingredients,\n    price: initIngredientsReducer.totalPrice,\n    orderConfirm: orderIngredientsReducer.orderConfirm,\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","export default {\n  FETCH_ORDER: \"FETCH_ORDER\",\n  FETCH_ORDER_SUCCESS: \"FETCH_ORDER_SUCCESS\",\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card } from \"antd\";\nimport { fetchOrder } from \"../store/action\";\nclass OrderDetails extends React.Component {\n  componentDidMount() {\n    this.props.fetchOrder(this.props.tokenId);\n  }\n  render() {\n    const { fetchOrders } = this.props;\n\n    return (\n      <div>\n        {fetchOrders &&\n          fetchOrders.map((item) => (\n            <Card key={item.id} style={{ width: 700 }}>\n              <p>\n                <strong>Ingredients: </strong>\n                {Object.keys(item.ingredients).map((key) => (\n                  <span\n                    style={{\n                      textTransform: \"capitalize\",\n                      border: \"1px dotted #ccc\",\n                      padding: 2,\n                      margin: \"0 2px\",\n                    }}\n                    key={key}\n                  >{`${key} (${item.ingredients[key]}) `}</span>\n                ))}\n              </p>\n              <p>\n                <b>\n                  Price: <strong>USD {item.totalPrice.toFixed(2)}</strong>\n                </b>\n              </p>\n            </Card>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ fetchOrderReducer, authenticationReducer }) => {\n  return {\n    fetchOrders: fetchOrderReducer.fetchedOrders,\n    tokenId: authenticationReducer.tokenId,\n  };\n};\nconst mapDispatchToProps = {\n  fetchOrder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetails);\n","import ActionTypes from \"./constants\";\n\nexport const fetchOrder = (tokenId) => {\n  return {\n    type: ActionTypes.FETCH_ORDER,\n    tokenId,\n  };\n};\n\nexport const fetchOrderSuccess = (payload) => {\n  return {\n    type: ActionTypes.FETCH_ORDER_SUCCESS,\n    payload,\n  };\n};\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass AuthenticationComponent extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isSignUp: true,\n  };\n\n  onUserChangeHandle = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  authenticateSubmitHandle = () => {\n    const payload = {\n      email: this.state.email,\n      password: this.state.password,\n      returnSecureToken: true,\n    };\n    this.props.authenticateUser(payload, this.state.isSignUp);\n  };\n  switchSignOption = () => {\n    this.setState((prevState) => {\n      return { isSignUp: !prevState.isSignUp };\n    });\n  };\n\n  render() {\n    let autoRedirect = null;\n    if (this.props.tokenId) {\n      if (this.props.buildStatus) {\n        autoRedirect = <Redirect to=\"/checkout-summary\" />;\n      } else {\n        autoRedirect = <Redirect to=\"/\" />;\n      }\n    }\n\n    return (\n      <div style={{ maxWidth: 500, margin: \"0 auto\" }}>\n        {autoRedirect}\n        <Form name=\"basic\">\n          <Form.Item label=\"Username\">\n            <Input\n              name=\"email\"\n              value={this.state.name}\n              onChange={this.onUserChangeHandle}\n            />\n          </Form.Item>\n\n          <Form.Item label=\"Password\">\n            <Input.Password\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.onUserChangeHandle}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" onClick={this.authenticateSubmitHandle}>\n              Submit\n            </Button>\n            <Button\n              type=\"secondary\"\n              style={{ marginLeft: 10 }}\n              onClick={this.switchSignOption}\n            >\n              Switch To Sign {this.state.isSignUp ? \"Sign In\" : \"Sign Up \"}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ authenticationReducer, initIngredientsReducer }) => {\n  return {\n    tokenId: authenticationReducer.tokenId !== null,\n    buildStatus: initIngredientsReducer.builder,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthenticationComponent);\n","export default {\n  AUTHENTICATE_USER: \"AUTHENTICATE_USER\",\n  AUTHENTICATE_USER_SUCCESS: \"AUTHENTICATE_USER_SUCCESS\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  TOKEN_STATUS: \"TOKEN_STATUS\",\n};\n","import ActionTypes from \"./constants\";\n\nexport const authenticateUser = (payload, isSignUp) => {\n  return {\n    type: ActionTypes.AUTHENTICATE_USER,\n    payload,\n    isSignUp,\n  };\n};\n\nexport const authenticateUserSuccess = (tokenId, expiration) => {\n  return {\n    type: ActionTypes.AUTHENTICATE_USER_SUCCESS,\n    tokenId,\n    expiration,\n  };\n};\n\nexport const logOut = () => {\n  localStorage.removeItem(\"tokenId\");\n  localStorage.removeItem(\"expirationTime\");\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS,\n  };\n};\n\nexport const retainLoginStatus = () => {\n  return {\n    type: ActionTypes.TOKEN_STATUS,\n  };\n};\n","import AuthenticationComponent from \"./components\";\nimport { authenticateUser } from \"./store/actions\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = {\n  authenticateUser,\n};\n\nconst Authentication = AuthenticationComponent;\n\nexport default connect(null, mapDispatchToProps)(Authentication);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../store/actions\";\n\nclass LogOut extends React.Component {\n  componentDidMount() {\n    this.props.logOut();\n  }\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = {\n  logOut,\n};\n\nexport default connect(null, mapDispatchToProps)(LogOut);\n","import React from \"react\";\nimport \"./App.less\";\nimport BurgerBuilder from \"./container/BurgerBuilder\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"antd\";\nimport logo from \"./assets/images/burger.svg\";\nimport { Switch, Route, Link, withRouter, Redirect } from \"react-router-dom\";\nimport Checkout from \"./container/Checkout/component/Checkout\";\nimport OrderDetails from \"./container/OrderDetails/component/OrderDetails\";\nimport Authentication from \"./container/Aunthentication/\";\nimport LogOut from \"./container/Aunthentication/components/LogOut\";\nimport { retainLoginStatus } from \"./container/Aunthentication/store/actions\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.retainLoginStatus();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/authentication\" component={Authentication} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.tokenId) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout-summary\" component={Checkout} />\n          <Route path=\"/order-details\" component={OrderDetails} />\n          <Route path=\"/logout\" component={LogOut} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"header-styling\">\n          <h1>\n            <img src={logo} alt=\"BurgerLogo\" />\n          </h1>\n          <nav>\n            <Menu mode=\"horizontal\">\n              <Menu.Item>\n                <Link to=\"/\">Burger Builder</Link>\n              </Menu.Item>\n              {this.props.tokenId ? (\n                <Menu.Item>\n                  <Link to=\"/order-details\">Orders</Link>\n                </Menu.Item>\n              ) : null}\n              <Menu.Item>\n                {this.props.tokenId ? (\n                  <Link to=\"/logout\">Log Out</Link>\n                ) : (\n                  <Link to=\"/authentication\">Authenticate</Link>\n                )}\n              </Menu.Item>\n            </Menu>\n          </nav>\n        </header>\n        {routes}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authenticationReducer }) => {\n  return { tokenId: authenticationReducer.tokenId !== null };\n};\nconst mapDispatchToProps = {\n  retainLoginStatus,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ActionTypes from \"./constants\";\nconst initialState = {\n  order: [],\n  orderConfirm: false,\n};\n\nconst orderIngredientsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.ORDER_CONFIRM:\n      return {\n        ...state,\n        orderConfirm: false,\n      };\n    case ActionTypes.ORDER_BURGER_SUCCESS:\n      const newOrder = {\n        ...action.orderData,\n        id: action.id.name,\n      };\n      return {\n        ...state,\n        orderConfirm: true,\n        order: state.order.concat(newOrder),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default orderIngredientsReducer;\n","//import ActionTypes from \"./constants\";\nimport ActionTypes from \"./constants\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 3,\n  builder: false,\n};\nconst priceIncrements = {\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 1,\n  meat: 1.8,\n};\n\nconst initIngredientsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.INIT_INGRDIENTS_SUCCEDED:\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        totalPrice: 3,\n        builder: false,\n      };\n    case ActionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + priceIncrements[action.ingredientName],\n        builder: true,\n      };\n    case ActionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - priceIncrements[action.ingredientName],\n        builder: true,\n      };\n    default:\n      // need this for default case\n      return state;\n  }\n};\n\nexport default initIngredientsReducer;\n","import ActionTypes from \"./constants\";\n\nconst initialState = {\n  fetchedOrders: null,\n};\n\nconst fetchOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_ORDER_SUCCESS:\n      return {\n        ...state,\n        fetchedOrders: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fetchOrderReducer;\n","import ActionTypes from \"./constants\";\nconst initialState = {\n  //authData: null,\n  tokenId: null,\n  expiration: \"\",\n};\n\nconst authenticationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.AUTHENTICATE_USER_SUCCESS:\n      return {\n        ...state,\n        //authData: action.payload,\n        tokenId: action.tokenId,\n        expiration: action.expiration,\n      };\n    case ActionTypes.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        tokenId: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authenticationReducer;\n","export function initIngredientsApi() {\n  return fetch(\"https://react-burgerapp-942a6.firebaseio.com/ingredients.json\");\n}\n","import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport * as action from \"./store/actions\";\nimport * as Apis from \"./apis\";\nimport ActionTypes from \"./store/constants\";\n\nfunction* initIngredientsSaga() {\n  const response = yield call(Apis.initIngredientsApi);\n\n  const data = yield response.json();\n  yield put(action.initIngredientsSucceded(data));\n}\n\nexport default [takeEvery(ActionTypes.INIT_INGRDIENTS, initIngredientsSaga)];\n","export const orderIngredientsApi = (payload, tokenId) => {\n  console.log(\"Api\", payload);\n  return fetch(\n    `https://react-burgerapp-942a6.firebaseio.com/orders.json?auth=${tokenId}`,\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    }\n  );\n};\n","import * as Apis from \"./apis\";\n\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport ActionTypes from \"./store/constants\";\nimport * as action from \"./store/action\";\n\nexport function* orderIngredientsSaga({ payload, tokenId }) {\n  const response = yield call(Apis.orderIngredientsApi, payload, tokenId);\n  const data = yield response.json();\n  yield put(action.orderIngredientsSuccess(data, payload));\n}\n\nexport default [takeEvery(ActionTypes.ORDER_BURGER, orderIngredientsSaga)];\n","export const fetchOrderApi = (tokenId) => {\n  return fetch(\n    `https://react-burgerapp-942a6.firebaseio.com/orders.json?auth=${tokenId}`,\n    {\n      \"Content-Type\": \"application/json\",\n      method: \"GET\",\n    }\n  );\n};\n","import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport ActionTypes from \"./store/constants\";\nimport * as Apis from \"./apis\";\nimport * as action from \"./store/action\";\n\nfunction* fetchOrderSaga({ tokenId }) {\n  console.log(tokenId);\n  const response = yield call(Apis.fetchOrderApi, tokenId);\n  const data = yield response.json();\n  const refinedOrders = [];\n  for (let prop in data) {\n    refinedOrders.push({\n      ...data[prop],\n      id: prop,\n    });\n  }\n  console.log(refinedOrders);\n  yield put(action.fetchOrderSuccess(refinedOrders));\n}\n\nexport default [takeEvery(ActionTypes.FETCH_ORDER, fetchOrderSaga)];\n","export const authenticateUserApi = (payload, isSignUp) => {\n  console.log(isSignUp);\n  let url =\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBQMN48K6wZSXBubeTNR7eT8TH_q_EvdEo\";\n  if (!isSignUp) {\n    url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBQMN48K6wZSXBubeTNR7eT8TH_q_EvdEo\";\n  }\n  return fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application / json\" },\n    body: JSON.stringify(payload),\n  });\n};\n","import { put, call, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport * as action from \"./store/actions\";\nimport * as Apis from \"./apis\";\nimport ActionTypes from \"./store/constants\";\n\nfunction* authenticateUserSaga({ payload, isSignUp }) {\n  const response = yield call(Apis.authenticateUserApi, payload, isSignUp);\n  const data = yield response.json();\n  const expirationTime = new Date(new Date().getTime() + data.expiresIn * 1000);\n  localStorage.setItem(\"tokenId\", data.idToken);\n  localStorage.setItem(\"expirationTime\", expirationTime);\n  yield put(action.authenticateUserSuccess(data.idToken, data.expiresIn));\n}\n\nfunction* retainLoginStatus() {\n  const token = yield localStorage.getItem(\"tokenId\");\n  const expirationDate = yield localStorage.getItem(\"expirationTime\");\n  yield put(action.authenticateUserSuccess(token, expirationDate));\n}\n\nexport default [\n  takeLatest(ActionTypes.AUTHENTICATE_USER, authenticateUserSaga),\n  takeEvery(ActionTypes.TOKEN_STATUS, retainLoginStatus),\n];\n","import { all } from \"redux-saga/effects\";\nimport initIngredientsSaga from \"../container/BurgerBuilder/saga\";\nimport orderIngredientsSaga from \"../container/Checkout/saga\";\nimport fetchOrderSaga from \"../container/OrderDetails/saga\";\nimport authenticateUserSaga from \"../container/Aunthentication/saga\";\n\nfunction* rootSaga() {\n  yield all([\n    ...initIngredientsSaga,\n    ...orderIngredientsSaga,\n    ...fetchOrderSaga,\n    ...authenticateUserSaga,\n  ]);\n}\n\nexport default rootSaga;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.less\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport orderIngredientsReducer from \"./container/Checkout/store/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport initIngredientsReducer from \"./container/BurgerBuilder/store/reducer\";\nimport fetchOrderReducer from \"./container/OrderDetails/store/reducer\";\nimport authenticationReducer from \"./container/Aunthentication/store/reducer\";\nimport rootSaga from \"./saga\";\nconst rootReducer = combineReducers({\n  orderIngredientsReducer,\n  initIngredientsReducer,\n  fetchOrderReducer,\n  authenticationReducer,\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}